API module:
The primary goal in this monolith to microservice refactoring was to keep the existing REST endpoints available as a 
layered system. The REST endpoints in the controllers classes will still service external clients however with the 
microservice refactoring all of the service classes have been migrated to other modules (Locations and Persons). On 
future iterations of this project’s lifecycle, the frontend or mobile application can continue to use the API’s REST 
endpoints or directly interface with the other modules gRPC services for better performance.


Persons module:
gRPC is selected as the primary internal messaging system due to its performance and strong message integrity. Both 
Persons and Connections services have been implemented in the Persons module.


Locations module:
Location Create events generated by the mobile clients were deemed to produce the largest amount of traffic. Kafka 
was selected to handle this type of traffic due to its ability to process large amounts of data and scale. Location 
Retrieve events use our standard internal gRPC messaging system.


Frontend module:
No changes were required in this microservice refactoring.
